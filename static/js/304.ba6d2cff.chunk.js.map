{"version":3,"file":"static/js/304.ba6d2cff.chunk.js","mappings":"gMAEaA,E,QAAkBC,EAAAA,IAAH,4D,SCCfC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAIhB,C,0HCfYC,EAAYV,EAAAA,EAAAA,GAAH,4NAYTW,EAAYX,EAAAA,EAAAA,GAAH,wRAaTY,EAAYZ,EAAAA,EAAAA,GAAH,8VAYTa,EAAWb,EAAAA,EAAAA,IAAH,iFAMRc,GAAYd,EAAAA,EAAAA,GAAOe,EAAAA,GAAPf,CAAH,2MAaTgB,EAAahB,EAAAA,EAAAA,EAAH,6Q,iDCFvB,EA5Ca,WACX,OAA8BiB,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4CF,EAAAA,EAAAA,UAAS,IAArD,eAAOG,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MAmBjB,OAjBAC,EAAAA,EAAAA,YAAU,WACRL,GAAW,IACXM,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJ,IAAMC,EAAcD,EAAOE,QAAQC,KACjC,YAAuC,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAEZ,MAAO,CAAEF,GAAAA,EAAIG,WADMF,GAASC,EACHE,YAFW,EAAlBA,YAGnB,IAEHd,EAAkBO,EACnB,IACAQ,SAAQ,WACPjB,GAAW,EACZ,GACJ,GAAE,KAGD,6BACE,SAACT,EAAD,6BACCU,IACC,SAACT,EAAD,UACGS,EAAeU,KAAI,gBAAGC,EAAH,EAAGA,GAAIG,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,YAAnB,OAClB,SAACvB,EAAD,WACE,UAACE,EAAD,CAAWuB,GAAE,iBAAYN,GAAMO,MAAO,CAAEC,KAAMjB,GAA9C,WACE,SAACT,EAAD,CACE2B,IAAG,UAAKN,GACRO,IAAG,UAAKC,EAAAA,IAAL,OAAoBP,MAEzB,SAACnB,EAAD,UAAakB,QANDH,EADE,MAavBb,IAAW,SAACjB,EAAA,EAAD,MAGjB,C,gLCxDD,IAAM0C,EAAe,mCAERD,EAAe,kCAEfjB,EAAoB,WAC/B,OAAOmB,MAAM,yDAAD,OAC+CD,IACzDjB,MAAK,SAAAmB,GACL,OAAOA,EAAIC,MACZ,GACF,EAEYC,EAAkB,SAAAC,GAC7B,OAAOJ,MAAM,sCAAD,OAC4BI,EAD5B,oBAC+CL,EAD/C,oBAEVjB,MAAK,SAAAmB,GACL,OAAOA,EAAIC,MACZ,GACF,EAEYG,EAAiB,SAAAC,GAC5B,OAAON,MAAM,qDAAD,OAC2CD,EAD3C,kBACiEO,EADjE,+CAEVxB,MAAK,SAAAmB,GACL,OAAOA,EAAIC,MACZ,GACF,EAEYK,EAAU,SAAAH,GACrB,OAAOJ,MAAM,sCAAD,OAC4BI,EAD5B,4BACuDL,EADvD,wBAEVjB,MAAK,SAAAmB,GACL,OAAOA,EAAIC,MACZ,GACF,EAEYM,EAAa,SAAAJ,GACxB,OAAOJ,MAAM,sCAAD,OAC4BI,EAD5B,4BACuDL,EADvD,2BAEVjB,MAAK,SAAAmB,GACL,OAAOA,EAAIC,MACZ,GACF,C","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderContainer = styled.div`\n  margin: 0 auto;\n  width: 100px;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderContainer>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#d71b1b\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </LoaderContainer>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const MainTitle = styled.h1`\n  padding: 20px;\n  text-align: center;\n  /* font-family: 'Poppins'; */\n  font-style: normal;\n  font-weight: 600;\n  font-size: 64px;\n  line-height: 1.3%;\n  /* or 83px */\n  color: #ffffff;\n`;\n\nexport const MovieList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 54px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MovieItem = styled.li`\n  background: #1f1f1f;\n  border-radius: 8px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    /* cursor: zoom-in; */\n  }\n`;\nexport const MovieImg = styled.img`\n  display: block;\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #f7f7f7;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    /* curso r: zoom-in; */\n    font-weight: 600;\n    color: #d71b1b;\n  }\n`;\n\nexport const MovieTitle = styled.p`\n  /* display: block; */\n  text-align: center;\n  text-decoration: none;\n\n  /* font-family: 'Poppins'; */\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.75;\n  letter-spacing: -0.011em;\n\n  color: inherit;\n`;\n","import {\n  MainTitle,\n  MovieList,\n  MovieItem,\n  MovieImg,\n  MovieTitle,\n  MovieLink,\n} from './Home.styled';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { getTrendingMovies, BASE_IMG_URL } from 'services';\n\nconst Home = () => {\n  const [loading, setLoading] = useState(false);\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n    getTrendingMovies()\n      .then(promis => {\n        const moviesArray = promis.results.map(\n          ({ id, title, name, poster_path }) => {\n            const movieTitle = title || name;\n            return { id, movieTitle, poster_path };\n          }\n        );\n        setTrendingMovies(moviesArray);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <main>\n      <MainTitle>Trending today</MainTitle>\n      {trendingMovies && (\n        <MovieList>\n          {trendingMovies.map(({ id, movieTitle, poster_path }) => (\n            <MovieItem key={id}>\n              <MovieLink to={`movies/${id}`} state={{ from: location }}>\n                <MovieImg\n                  alt={`${movieTitle}`}\n                  src={`${BASE_IMG_URL}${poster_path}`}\n                />\n                <MovieTitle>{movieTitle}</MovieTitle>\n              </MovieLink>\n            </MovieItem>\n          ))}\n        </MovieList>\n      )}\n      {loading && <Loader />}\n    </main>\n  );\n};\nexport default Home;\n","const PERSONAL_KEY = 'd78968a65961b0fbd63bb81018ffc9d2';\n\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendingMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${PERSONAL_KEY}`\n  ).then(res => {\n    return res.json();\n  });\n};\n\nexport const getMovieDetails = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${PERSONAL_KEY}&language=en-US`\n  ).then(res => {\n    return res.json();\n  });\n};\n\nexport const getQueryMovies = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${PERSONAL_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  ).then(res => {\n    return res.json();\n  });\n};\n\nexport const getCast = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${PERSONAL_KEY}&language=en-US    `\n  ).then(res => {\n    return res.json();\n  });\n};\n\nexport const getReviews = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${PERSONAL_KEY}&language=en-US&page=1`\n  ).then(res => {\n    return res.json();\n  });\n};\n"],"names":["LoaderContainer","styled","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","MainTitle","MovieList","MovieItem","MovieImg","MovieLink","Link","MovieTitle","useState","loading","setLoading","trendingMovies","setTrendingMovies","location","useLocation","useEffect","getTrendingMovies","then","promis","moviesArray","results","map","id","title","name","movieTitle","poster_path","finally","to","state","from","alt","src","BASE_IMG_URL","PERSONAL_KEY","fetch","res","json","getMovieDetails","movieId","getQueryMovies","query","getCast","getReviews"],"sourceRoot":""}